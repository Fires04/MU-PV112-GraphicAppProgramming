package zombieapocalypse;

import com.jogamp.opengl.util.FPSAnimator;
import java.awt.BorderLayout;
import javax.media.opengl.GLCapabilities;
import javax.media.opengl.GLProfile;
import javax.media.opengl.awt.GLJPanel;

/**
 *
 * @author Milos
 */
public class MainWindow extends javax.swing.JFrame {

    private GLProfile profile;
    private GLJPanel canvas;
    
    private Scene scene;
    
    public MainWindow() {
        initComponents();
        
        profile = GLProfile.get(GLProfile.GL2);
        
        canvas = new GLJPanel(new GLCapabilities(profile));
        
        CanvasPanel.add(canvas,BorderLayout.CENTER);
        
        scene = new Scene();
        
        canvas.addGLEventListener(scene);
        
        FPSAnimator animator = new FPSAnimator(canvas, 60);
        animator.start();
        
        scene.setAzimuth(AzimuthSlider.getValue());
        scene.setAltitude(AltitudeSlider.getValue());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Splitter = new javax.swing.JSplitPane();
        GuiPanel = new javax.swing.JPanel();
        AzimuthLabel = new javax.swing.JLabel();
        AzimuthSlider = new javax.swing.JSlider();
        AltitudeLabel = new javax.swing.JLabel();
        AltitudeSlider = new javax.swing.JSlider();
        XPositionLabel = new javax.swing.JLabel();
        XPos = new javax.swing.JSlider();
        YPositionLabel = new javax.swing.JLabel();
        YPos = new javax.swing.JSlider();
        ZPositionLabel = new javax.swing.JLabel();
        ZPos = new javax.swing.JSlider();
        CanvasPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 400));

        Splitter.setDividerLocation(600);

        GuiPanel.setLayout(new javax.swing.BoxLayout(GuiPanel, javax.swing.BoxLayout.Y_AXIS));

        AzimuthLabel.setText("Azimuth:");
        AzimuthLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        GuiPanel.add(AzimuthLabel);

        AzimuthSlider.setMajorTickSpacing(10);
        AzimuthSlider.setMaximum(360);
        AzimuthSlider.setPaintTicks(true);
        AzimuthSlider.setToolTipText("Azimuth");
        AzimuthSlider.setValue(0);
        AzimuthSlider.setAlignmentX(0.0F);
        AzimuthSlider.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        AzimuthSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AzimuthSliderStateChanged(evt);
            }
        });
        GuiPanel.add(AzimuthSlider);

        AltitudeLabel.setText("Altitude:");
        AltitudeLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        GuiPanel.add(AltitudeLabel);

        AltitudeSlider.setMajorTickSpacing(10);
        AltitudeSlider.setMaximum(360);
        AltitudeSlider.setPaintTicks(true);
        AltitudeSlider.setToolTipText("Altitude");
        AltitudeSlider.setValue(45);
        AltitudeSlider.setAlignmentX(0.0F);
        AltitudeSlider.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        AltitudeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AltitudeSliderStateChanged(evt);
            }
        });
        GuiPanel.add(AltitudeSlider);

        XPositionLabel.setText("X:");
        XPositionLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        GuiPanel.add(XPositionLabel);

        XPos.setMajorTickSpacing(10);
        XPos.setMaximum(120);
        XPos.setMinimum(-120);
        XPos.setPaintTicks(true);
        XPos.setToolTipText("Azimuth");
        XPos.setValue(0);
        XPos.setAlignmentX(0.0F);
        XPos.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        XPos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                XPosStateChanged(evt);
            }
        });
        GuiPanel.add(XPos);

        YPositionLabel.setText("Y:");
        YPositionLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        GuiPanel.add(YPositionLabel);

        YPos.setMajorTickSpacing(10);
        YPos.setMaximum(120);
        YPos.setMinimum(-120);
        YPos.setPaintTicks(true);
        YPos.setToolTipText("Altitude");
        YPos.setValue(0);
        YPos.setAlignmentX(0.0F);
        YPos.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        YPos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                YPosStateChanged(evt);
            }
        });
        GuiPanel.add(YPos);

        ZPositionLabel.setText("Z:");
        ZPositionLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        GuiPanel.add(ZPositionLabel);

        ZPos.setMajorTickSpacing(10);
        ZPos.setMaximum(120);
        ZPos.setMinimum(-120);
        ZPos.setPaintTicks(true);
        ZPos.setToolTipText("Altitude");
        ZPos.setValue(0);
        ZPos.setAlignmentX(0.0F);
        ZPos.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        ZPos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ZPosStateChanged(evt);
            }
        });
        GuiPanel.add(ZPos);

        Splitter.setRightComponent(GuiPanel);

        CanvasPanel.setPreferredSize(new java.awt.Dimension(600, 400));
        CanvasPanel.setVerifyInputWhenFocusTarget(false);
        CanvasPanel.setLayout(new java.awt.BorderLayout());
        Splitter.setLeftComponent(CanvasPanel);

        getContentPane().add(Splitter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AzimuthSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AzimuthSliderStateChanged
        scene.setAzimuth(AzimuthSlider.getValue());
        this.AzimuthLabel.setText("Azimut: "+Integer.toString(AzimuthSlider.getValue()));
    }//GEN-LAST:event_AzimuthSliderStateChanged

    private void AltitudeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AltitudeSliderStateChanged
        scene.setAltitude(AltitudeSlider.getValue());
        this.AltitudeLabel.setText("Altitude: "+Integer.toString(AltitudeSlider.getValue()));
    }//GEN-LAST:event_AltitudeSliderStateChanged

    private void XPosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_XPosStateChanged
        scene.setXPos(XPos.getValue());
        this.XPositionLabel.setText("X: "+Integer.toString(XPos.getValue()));
    }//GEN-LAST:event_XPosStateChanged

    private void YPosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_YPosStateChanged
        scene.setYPos(YPos.getValue());
        this.YPositionLabel.setText("Y: "+Integer.toString(YPos.getValue()));
    }//GEN-LAST:event_YPosStateChanged

    private void ZPosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ZPosStateChanged
        scene.setZPos(ZPos.getValue());
        this.ZPositionLabel.setText("Z: "+Integer.toString(ZPos.getValue()));
    }//GEN-LAST:event_ZPosStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AltitudeLabel;
    private javax.swing.JSlider AltitudeSlider;
    private javax.swing.JLabel AzimuthLabel;
    private javax.swing.JSlider AzimuthSlider;
    private javax.swing.JPanel CanvasPanel;
    private javax.swing.JPanel GuiPanel;
    private javax.swing.JSplitPane Splitter;
    private javax.swing.JSlider XPos;
    private javax.swing.JLabel XPositionLabel;
    private javax.swing.JSlider YPos;
    private javax.swing.JLabel YPositionLabel;
    private javax.swing.JSlider ZPos;
    private javax.swing.JLabel ZPositionLabel;
    // End of variables declaration//GEN-END:variables
}
